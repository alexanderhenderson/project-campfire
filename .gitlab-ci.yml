stages:
  - test
  - build
  - deploy

services:
  - postgres:14-bullseye

variables:
  POSTGRES_PASSWORD: test
  DATABASE_URL: postgresql://postgres:test@postgres:5432/postgres
  DJWTO_SIGNING_KEY: c0c3ec33213a4ce5f0378c4350846fc35310b3ae3672a8b7f0ffae1a527d38cc

events-api-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd ./backend/events
    - pip install -r requirements.txt
    - python manage.py test

users-api-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd ./backend/users
    - pip install -r requirements.txt
    - python manage.py test

lint-python-projects-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 ./backend/users ./backend/events

build-users-api-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd backend/users
    - docker build -t ${CI_REGISTRY_IMAGE}/users_api:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/users_api:latest ${CI_REGISTRY_IMAGE}/users_api_backups:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/users_api_backups:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/users_api:latest

deploy-users-api-image-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-users-api-job
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}/users_api:latest
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker tag ${CI_REGISTRY_IMAGE}/users_api:latest registry.heroku.com/$HEROKU_ACCOUNT_USERS_API/web:latest
    - docker push registry.heroku.com/$HEROKU_ACCOUNT_USERS_API/web:latest

release-users-api-job:
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-users-api-image-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release web --app $HEROKU_ACCOUNT_USERS_API

build-users-poller-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd backend/users/poll
    - docker build -t ${CI_REGISTRY_IMAGE}/users_poller:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/users_poller:latest ${CI_REGISTRY_IMAGE}/users_poller_backups:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/users_poller_backups:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/users_poller:latest

deploy-users-poller-image-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-users-poller-job
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull ${CI_REGISTRY_IMAGE}/users_poller:latest
    - docker tag ${CI_REGISTRY_IMAGE}/users_poller:latest registry.heroku.com/$HEROKU_ACCOUNT_USERS_POLLER/worker:latest
    - docker push registry.heroku.com/$HEROKU_ACCOUNT_USERS_POLLER/worker:latest

release-users-poller-job:
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-users-poller-image-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release worker --app $HEROKU_ACCOUNT_USERS_POLLER

build-events-api-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd backend/events
    - docker build -t ${CI_REGISTRY_IMAGE}/events_api:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/events_api:latest ${CI_REGISTRY_IMAGE}/events_api_backups:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/events_api_backups:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/events_api:latest

deploy-events-api-image-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-events-api-job
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull ${CI_REGISTRY_IMAGE}/events_api:latest
    - docker tag ${CI_REGISTRY_IMAGE}/events_api:latest registry.heroku.com/$HEROKU_ACCOUNT_EVENTS_API/web:latest
    - docker push registry.heroku.com/$HEROKU_ACCOUNT_EVENTS_API/web:latest

release-events-api-job:
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-events-api-image-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release web --app $HEROKU_ACCOUNT_EVENTS_API

build-events-poller-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd backend/events
    - docker build -f Dockerfile.Poller -t ${CI_REGISTRY_IMAGE}/events_poller:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/events_poller:latest ${CI_REGISTRY_IMAGE}/events_poller_backups:$CI_PIPELINE_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/events_poller_backups:$CI_PIPELINE_ID
    - docker push ${CI_REGISTRY_IMAGE}/events_poller:latest

deploy-events-poller-image-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-events-poller-job
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull ${CI_REGISTRY_IMAGE}/events_poller:latest
    - docker tag ${CI_REGISTRY_IMAGE}/events_poller:latest registry.heroku.com/$HEROKU_ACCOUNT_EVENTS_POLLER/worker:latest
    - docker push registry.heroku.com/$HEROKU_ACCOUNT_EVENTS_POLLER/worker:latest

release-events-poller-job:
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-events-poller-image-job
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release worker --app $HEROKU_ACCOUNT_EVENTS_POLLER

front-end-build-job:
  image: node:lts-bullseye
  stage: build
  needs:
    - users-api-test-job
    - lint-python-projects-job
  variables:
    PUBLIC_URL: https://66617.gitlab.io/project-gamma
    REACT_APP_NAVLINK: /project-gamma
  script:
    - cd frontend-app
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - frontend-app/build/

pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - front-end-build-job
  needs:
    - front-end-build-job
  script:
    - mv frontend-app/build/ public
  artifacts:
    paths:
      - public
