volumes:
  postgres-data:
    external: true

services:
  react:
    build:
      context: ./frontend-app
      dockerfile: ./Dockerfile.dev
    volumes:
        - ./frontend-app:/app
    ports:
        - "3000:3000"
    environment:
        HOST_OS: ${OS}
        NODE_ENV: development
        HOST: "0.0.0.0"
  postgres:
    build:
        context: ./relational-data
        dockerfile: ./Dockerfile.dev
    volumes:
        - postgres-data:/var/lib/postgresql/data
    environment:
        - POSTGRES_MULTIPLE_DATABASES=events, users, messenger
        - POSTGRES_PASSWORD=test-databases
    ports:
        - 15432:5432
  events:
    build:
        context: ./backend/events
        dockerfile: ./Dockerfile.dev
    ports:
        - "8090:8000"
    volumes:
        - ./backend/events:/app
    environment:
        DATABASE_URL: postgresql://events:password@postgres/events
        WAIT_HOSTS: postgres:5432
  users:
    build:
        context: ./backend/users
        dockerfile: ./Dockerfile.dev
    ports:
        - "8080:8000"
    volumes:
        - ./backend/users:/app
    environment:
        DATABASE_URL: postgresql://users:password@postgres/users
        WAIT_HOSTS: postgres:5432
  messenger:
    build:
        context: ./backend/messenger
        dockerfile: ./Dockerfile.dev
    ports:
        - "8070:8000"
    volumes:
        - ./backend/messenger:/app
    environment:
        DATABASE_URL: postgresql://messenger:password@postgres/messenger
        WAIT_HOSTS: postgres:5432